declare function isBytes(a: unknown): a is Uint8Array;
/**
 * @example fromHex('cafe0123') -> Uint8Array.from([0xca, 0xfe, 0x01, 0x23])
 */
declare function fromHex(hex: string): Uint8Array;
/**
 * @example toHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) -> 'cafe0123'
 */
declare function toHex(bytes: Uint8Array): string;
/** Convert a Hex encoded string to a Utf-8 encoded string.
 * @example toText("6d79746f6b656e") -> 'mytoken'
 */
declare function toText(hex: string): string;
/** Convert a Utf-8 encoded string to a Hex encoded string.
 * @example fromText("mytoken") -> 6d79746f6b656e
 */
declare function fromText(text: string): string;
declare const sleep: (ms?: number) => Promise<unknown>;

export { fromHex, fromText, isBytes, sleep, toHex, toText };
